                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.0.0 #11528 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module nixie_tube
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _delay
                                     13 	.globl _select_char
                                     14 	.globl _select_nixie_tube
                                     15 	.globl _TF2
                                     16 	.globl _EXF2
                                     17 	.globl _RCLK
                                     18 	.globl _TCLK
                                     19 	.globl _EXEN2
                                     20 	.globl _TR2
                                     21 	.globl _C_T2
                                     22 	.globl _CP_RL2
                                     23 	.globl _T2CON_7
                                     24 	.globl _T2CON_6
                                     25 	.globl _T2CON_5
                                     26 	.globl _T2CON_4
                                     27 	.globl _T2CON_3
                                     28 	.globl _T2CON_2
                                     29 	.globl _T2CON_1
                                     30 	.globl _T2CON_0
                                     31 	.globl _PT2
                                     32 	.globl _ET2
                                     33 	.globl _CY
                                     34 	.globl _AC
                                     35 	.globl _F0
                                     36 	.globl _RS1
                                     37 	.globl _RS0
                                     38 	.globl _OV
                                     39 	.globl _F1
                                     40 	.globl _P
                                     41 	.globl _PS
                                     42 	.globl _PT1
                                     43 	.globl _PX1
                                     44 	.globl _PT0
                                     45 	.globl _PX0
                                     46 	.globl _RD
                                     47 	.globl _WR
                                     48 	.globl _T1
                                     49 	.globl _T0
                                     50 	.globl _INT1
                                     51 	.globl _INT0
                                     52 	.globl _TXD
                                     53 	.globl _RXD
                                     54 	.globl _P3_7
                                     55 	.globl _P3_6
                                     56 	.globl _P3_5
                                     57 	.globl _P3_4
                                     58 	.globl _P3_3
                                     59 	.globl _P3_2
                                     60 	.globl _P3_1
                                     61 	.globl _P3_0
                                     62 	.globl _EA
                                     63 	.globl _ES
                                     64 	.globl _ET1
                                     65 	.globl _EX1
                                     66 	.globl _ET0
                                     67 	.globl _EX0
                                     68 	.globl _P2_7
                                     69 	.globl _P2_6
                                     70 	.globl _P2_5
                                     71 	.globl _P2_4
                                     72 	.globl _P2_3
                                     73 	.globl _P2_2
                                     74 	.globl _P2_1
                                     75 	.globl _P2_0
                                     76 	.globl _SM0
                                     77 	.globl _SM1
                                     78 	.globl _SM2
                                     79 	.globl _REN
                                     80 	.globl _TB8
                                     81 	.globl _RB8
                                     82 	.globl _TI
                                     83 	.globl _RI
                                     84 	.globl _P1_7
                                     85 	.globl _P1_6
                                     86 	.globl _P1_5
                                     87 	.globl _P1_4
                                     88 	.globl _P1_3
                                     89 	.globl _P1_2
                                     90 	.globl _P1_1
                                     91 	.globl _P1_0
                                     92 	.globl _TF1
                                     93 	.globl _TR1
                                     94 	.globl _TF0
                                     95 	.globl _TR0
                                     96 	.globl _IE1
                                     97 	.globl _IT1
                                     98 	.globl _IE0
                                     99 	.globl _IT0
                                    100 	.globl _P0_7
                                    101 	.globl _P0_6
                                    102 	.globl _P0_5
                                    103 	.globl _P0_4
                                    104 	.globl _P0_3
                                    105 	.globl _P0_2
                                    106 	.globl _P0_1
                                    107 	.globl _P0_0
                                    108 	.globl _TH2
                                    109 	.globl _TL2
                                    110 	.globl _RCAP2H
                                    111 	.globl _RCAP2L
                                    112 	.globl _T2CON
                                    113 	.globl _B
                                    114 	.globl _ACC
                                    115 	.globl _PSW
                                    116 	.globl _IP
                                    117 	.globl _P3
                                    118 	.globl _IE
                                    119 	.globl _P2
                                    120 	.globl _SBUF
                                    121 	.globl _SCON
                                    122 	.globl _P1
                                    123 	.globl _TH1
                                    124 	.globl _TH0
                                    125 	.globl _TL1
                                    126 	.globl _TL0
                                    127 	.globl _TMOD
                                    128 	.globl _TCON
                                    129 	.globl _PCON
                                    130 	.globl _DPH
                                    131 	.globl _DPL
                                    132 	.globl _SP
                                    133 	.globl _P0
                                    134 	.globl _alphabet
                                    135 ;--------------------------------------------------------
                                    136 ; special function registers
                                    137 ;--------------------------------------------------------
                                    138 	.area RSEG    (ABS,DATA)
      000000                        139 	.org 0x0000
                           000080   140 _P0	=	0x0080
                           000081   141 _SP	=	0x0081
                           000082   142 _DPL	=	0x0082
                           000083   143 _DPH	=	0x0083
                           000087   144 _PCON	=	0x0087
                           000088   145 _TCON	=	0x0088
                           000089   146 _TMOD	=	0x0089
                           00008A   147 _TL0	=	0x008a
                           00008B   148 _TL1	=	0x008b
                           00008C   149 _TH0	=	0x008c
                           00008D   150 _TH1	=	0x008d
                           000090   151 _P1	=	0x0090
                           000098   152 _SCON	=	0x0098
                           000099   153 _SBUF	=	0x0099
                           0000A0   154 _P2	=	0x00a0
                           0000A8   155 _IE	=	0x00a8
                           0000B0   156 _P3	=	0x00b0
                           0000B8   157 _IP	=	0x00b8
                           0000D0   158 _PSW	=	0x00d0
                           0000E0   159 _ACC	=	0x00e0
                           0000F0   160 _B	=	0x00f0
                           0000C8   161 _T2CON	=	0x00c8
                           0000CA   162 _RCAP2L	=	0x00ca
                           0000CB   163 _RCAP2H	=	0x00cb
                           0000CC   164 _TL2	=	0x00cc
                           0000CD   165 _TH2	=	0x00cd
                                    166 ;--------------------------------------------------------
                                    167 ; special function bits
                                    168 ;--------------------------------------------------------
                                    169 	.area RSEG    (ABS,DATA)
      000000                        170 	.org 0x0000
                           000080   171 _P0_0	=	0x0080
                           000081   172 _P0_1	=	0x0081
                           000082   173 _P0_2	=	0x0082
                           000083   174 _P0_3	=	0x0083
                           000084   175 _P0_4	=	0x0084
                           000085   176 _P0_5	=	0x0085
                           000086   177 _P0_6	=	0x0086
                           000087   178 _P0_7	=	0x0087
                           000088   179 _IT0	=	0x0088
                           000089   180 _IE0	=	0x0089
                           00008A   181 _IT1	=	0x008a
                           00008B   182 _IE1	=	0x008b
                           00008C   183 _TR0	=	0x008c
                           00008D   184 _TF0	=	0x008d
                           00008E   185 _TR1	=	0x008e
                           00008F   186 _TF1	=	0x008f
                           000090   187 _P1_0	=	0x0090
                           000091   188 _P1_1	=	0x0091
                           000092   189 _P1_2	=	0x0092
                           000093   190 _P1_3	=	0x0093
                           000094   191 _P1_4	=	0x0094
                           000095   192 _P1_5	=	0x0095
                           000096   193 _P1_6	=	0x0096
                           000097   194 _P1_7	=	0x0097
                           000098   195 _RI	=	0x0098
                           000099   196 _TI	=	0x0099
                           00009A   197 _RB8	=	0x009a
                           00009B   198 _TB8	=	0x009b
                           00009C   199 _REN	=	0x009c
                           00009D   200 _SM2	=	0x009d
                           00009E   201 _SM1	=	0x009e
                           00009F   202 _SM0	=	0x009f
                           0000A0   203 _P2_0	=	0x00a0
                           0000A1   204 _P2_1	=	0x00a1
                           0000A2   205 _P2_2	=	0x00a2
                           0000A3   206 _P2_3	=	0x00a3
                           0000A4   207 _P2_4	=	0x00a4
                           0000A5   208 _P2_5	=	0x00a5
                           0000A6   209 _P2_6	=	0x00a6
                           0000A7   210 _P2_7	=	0x00a7
                           0000A8   211 _EX0	=	0x00a8
                           0000A9   212 _ET0	=	0x00a9
                           0000AA   213 _EX1	=	0x00aa
                           0000AB   214 _ET1	=	0x00ab
                           0000AC   215 _ES	=	0x00ac
                           0000AF   216 _EA	=	0x00af
                           0000B0   217 _P3_0	=	0x00b0
                           0000B1   218 _P3_1	=	0x00b1
                           0000B2   219 _P3_2	=	0x00b2
                           0000B3   220 _P3_3	=	0x00b3
                           0000B4   221 _P3_4	=	0x00b4
                           0000B5   222 _P3_5	=	0x00b5
                           0000B6   223 _P3_6	=	0x00b6
                           0000B7   224 _P3_7	=	0x00b7
                           0000B0   225 _RXD	=	0x00b0
                           0000B1   226 _TXD	=	0x00b1
                           0000B2   227 _INT0	=	0x00b2
                           0000B3   228 _INT1	=	0x00b3
                           0000B4   229 _T0	=	0x00b4
                           0000B5   230 _T1	=	0x00b5
                           0000B6   231 _WR	=	0x00b6
                           0000B7   232 _RD	=	0x00b7
                           0000B8   233 _PX0	=	0x00b8
                           0000B9   234 _PT0	=	0x00b9
                           0000BA   235 _PX1	=	0x00ba
                           0000BB   236 _PT1	=	0x00bb
                           0000BC   237 _PS	=	0x00bc
                           0000D0   238 _P	=	0x00d0
                           0000D1   239 _F1	=	0x00d1
                           0000D2   240 _OV	=	0x00d2
                           0000D3   241 _RS0	=	0x00d3
                           0000D4   242 _RS1	=	0x00d4
                           0000D5   243 _F0	=	0x00d5
                           0000D6   244 _AC	=	0x00d6
                           0000D7   245 _CY	=	0x00d7
                           0000AD   246 _ET2	=	0x00ad
                           0000BD   247 _PT2	=	0x00bd
                           0000C8   248 _T2CON_0	=	0x00c8
                           0000C9   249 _T2CON_1	=	0x00c9
                           0000CA   250 _T2CON_2	=	0x00ca
                           0000CB   251 _T2CON_3	=	0x00cb
                           0000CC   252 _T2CON_4	=	0x00cc
                           0000CD   253 _T2CON_5	=	0x00cd
                           0000CE   254 _T2CON_6	=	0x00ce
                           0000CF   255 _T2CON_7	=	0x00cf
                           0000C8   256 _CP_RL2	=	0x00c8
                           0000C9   257 _C_T2	=	0x00c9
                           0000CA   258 _TR2	=	0x00ca
                           0000CB   259 _EXEN2	=	0x00cb
                           0000CC   260 _TCLK	=	0x00cc
                           0000CD   261 _RCLK	=	0x00cd
                           0000CE   262 _EXF2	=	0x00ce
                           0000CF   263 _TF2	=	0x00cf
                                    264 ;--------------------------------------------------------
                                    265 ; overlayable register banks
                                    266 ;--------------------------------------------------------
                                    267 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        268 	.ds 8
                                    269 ;--------------------------------------------------------
                                    270 ; internal ram data
                                    271 ;--------------------------------------------------------
                                    272 	.area DSEG    (DATA)
      000000                        273 _alphabet::
      000000                        274 	.ds 17
                                    275 ;--------------------------------------------------------
                                    276 ; overlayable items in internal ram 
                                    277 ;--------------------------------------------------------
                                    278 	.area	OSEG    (OVR,DATA)
                                    279 	.area	OSEG    (OVR,DATA)
                                    280 	.area	OSEG    (OVR,DATA)
                                    281 ;--------------------------------------------------------
                                    282 ; Stack segment in internal ram 
                                    283 ;--------------------------------------------------------
                                    284 	.area	SSEG
      000000                        285 __start__stack:
      000000                        286 	.ds	1
                                    287 
                                    288 ;--------------------------------------------------------
                                    289 ; indirectly addressable internal ram data
                                    290 ;--------------------------------------------------------
                                    291 	.area ISEG    (DATA)
                                    292 ;--------------------------------------------------------
                                    293 ; absolute internal ram data
                                    294 ;--------------------------------------------------------
                                    295 	.area IABS    (ABS,DATA)
                                    296 	.area IABS    (ABS,DATA)
                                    297 ;--------------------------------------------------------
                                    298 ; bit data
                                    299 ;--------------------------------------------------------
                                    300 	.area BSEG    (BIT)
                                    301 ;--------------------------------------------------------
                                    302 ; paged external ram data
                                    303 ;--------------------------------------------------------
                                    304 	.area PSEG    (PAG,XDATA)
                                    305 ;--------------------------------------------------------
                                    306 ; external ram data
                                    307 ;--------------------------------------------------------
                                    308 	.area XSEG    (XDATA)
                                    309 ;--------------------------------------------------------
                                    310 ; absolute external ram data
                                    311 ;--------------------------------------------------------
                                    312 	.area XABS    (ABS,XDATA)
                                    313 ;--------------------------------------------------------
                                    314 ; external initialized ram data
                                    315 ;--------------------------------------------------------
                                    316 	.area XISEG   (XDATA)
                                    317 	.area HOME    (CODE)
                                    318 	.area GSINIT0 (CODE)
                                    319 	.area GSINIT1 (CODE)
                                    320 	.area GSINIT2 (CODE)
                                    321 	.area GSINIT3 (CODE)
                                    322 	.area GSINIT4 (CODE)
                                    323 	.area GSINIT5 (CODE)
                                    324 	.area GSINIT  (CODE)
                                    325 	.area GSFINAL (CODE)
                                    326 	.area CSEG    (CODE)
                                    327 ;--------------------------------------------------------
                                    328 ; interrupt vector 
                                    329 ;--------------------------------------------------------
                                    330 	.area HOME    (CODE)
      000000                        331 __interrupt_vect:
      000000 02r00r00         [24]  332 	ljmp	__sdcc_gsinit_startup
                                    333 ;--------------------------------------------------------
                                    334 ; global & static initialisations
                                    335 ;--------------------------------------------------------
                                    336 	.area HOME    (CODE)
                                    337 	.area GSINIT  (CODE)
                                    338 	.area GSFINAL (CODE)
                                    339 	.area GSINIT  (CODE)
                                    340 	.globl __sdcc_gsinit_startup
                                    341 	.globl __sdcc_program_startup
                                    342 	.globl __start__stack
                                    343 	.globl __mcs51_genXINIT
                                    344 	.globl __mcs51_genXRAMCLEAR
                                    345 	.globl __mcs51_genRAMCLEAR
                                    346 ;	nixie_tube.c:59: char alphabet[17] = {
      000000 75*00 3F         [24]  347 	mov	_alphabet,#0x3f
      000003 75*01 06         [24]  348 	mov	(_alphabet + 0x0001),#0x06
      000006 75*02 5B         [24]  349 	mov	(_alphabet + 0x0002),#0x5b
      000009 75*03 4F         [24]  350 	mov	(_alphabet + 0x0003),#0x4f
      00000C 75*04 66         [24]  351 	mov	(_alphabet + 0x0004),#0x66
      00000F 75*05 6D         [24]  352 	mov	(_alphabet + 0x0005),#0x6d
      000012 75*06 7D         [24]  353 	mov	(_alphabet + 0x0006),#0x7d
      000015 75*07 07         [24]  354 	mov	(_alphabet + 0x0007),#0x07
      000018 75*08 7F         [24]  355 	mov	(_alphabet + 0x0008),#0x7f
      00001B 75*09 6F         [24]  356 	mov	(_alphabet + 0x0009),#0x6f
      00001E 75*0A 77         [24]  357 	mov	(_alphabet + 0x000a),#0x77
      000021 75*0B 7C         [24]  358 	mov	(_alphabet + 0x000b),#0x7c
      000024 75*0C 39         [24]  359 	mov	(_alphabet + 0x000c),#0x39
      000027 75*0D 5E         [24]  360 	mov	(_alphabet + 0x000d),#0x5e
      00002A 75*0E 79         [24]  361 	mov	(_alphabet + 0x000e),#0x79
      00002D 75*0F 71         [24]  362 	mov	(_alphabet + 0x000f),#0x71
      000030 75*10 80         [24]  363 	mov	(_alphabet + 0x0010),#0x80
                                    364 	.area GSFINAL (CODE)
      000000 02r00r03         [24]  365 	ljmp	__sdcc_program_startup
                                    366 ;--------------------------------------------------------
                                    367 ; Home
                                    368 ;--------------------------------------------------------
                                    369 	.area HOME    (CODE)
                                    370 	.area HOME    (CODE)
      000003                        371 __sdcc_program_startup:
      000003 02r00r78         [24]  372 	ljmp	_main
                                    373 ;	return from main will return to caller
                                    374 ;--------------------------------------------------------
                                    375 ; code
                                    376 ;--------------------------------------------------------
                                    377 	.area CSEG    (CODE)
                                    378 ;------------------------------------------------------------
                                    379 ;Allocation info for local variables in function 'select_nixie_tube'
                                    380 ;------------------------------------------------------------
                                    381 ;num                       Allocated to registers r7 
                                    382 ;------------------------------------------------------------
                                    383 ;	nixie_tube.c:6: void select_nixie_tube(char num) {
                                    384 ;	-----------------------------------------
                                    385 ;	 function select_nixie_tube
                                    386 ;	-----------------------------------------
      000000                        387 _select_nixie_tube:
                           000007   388 	ar7 = 0x07
                           000006   389 	ar6 = 0x06
                           000005   390 	ar5 = 0x05
                           000004   391 	ar4 = 0x04
                           000003   392 	ar3 = 0x03
                           000002   393 	ar2 = 0x02
                           000001   394 	ar1 = 0x01
                           000000   395 	ar0 = 0x00
                                    396 ;	nixie_tube.c:7: switch(num){
      000000 E5 82            [12]  397 	mov	a,dpl
      000002 FF               [12]  398 	mov	r7,a
      000003 24 F8            [12]  399 	add	a,#0xff - 0x07
      000005 50 01            [24]  400 	jnc	00116$
      000007 22               [24]  401 	ret
      000008                        402 00116$:
      000008 EF               [12]  403 	mov	a,r7
      000009 24 0A            [12]  404 	add	a,#(00117$-3-.)
      00000B 83               [24]  405 	movc	a,@a+pc
      00000C F5 82            [12]  406 	mov	dpl,a
      00000E EF               [12]  407 	mov	a,r7
      00000F 24 0C            [12]  408 	add	a,#(00118$-3-.)
      000011 83               [24]  409 	movc	a,@a+pc
      000012 F5 83            [12]  410 	mov	dph,a
      000014 E4               [12]  411 	clr	a
      000015 73               [24]  412 	jmp	@a+dptr
      000016                        413 00117$:
      000016r26                     414 	.db	00101$
      000017r2D                     415 	.db	00102$
      000018r34                     416 	.db	00103$
      000019r3B                     417 	.db	00104$
      00001Ar42                     418 	.db	00105$
      00001Br49                     419 	.db	00106$
      00001Cr50                     420 	.db	00107$
      00001Dr57                     421 	.db	00108$
      00001E                        422 00118$:
      00001Es00                     423 	.db	00101$>>8
      00001Fs00                     424 	.db	00102$>>8
      000020s00                     425 	.db	00103$>>8
      000021s00                     426 	.db	00104$>>8
      000022s00                     427 	.db	00105$>>8
      000023s00                     428 	.db	00106$>>8
      000024s00                     429 	.db	00107$>>8
      000025s00                     430 	.db	00108$>>8
                                    431 ;	nixie_tube.c:8: case 0:
      000026                        432 00101$:
                                    433 ;	nixie_tube.c:9: bit0 = 0;
                                    434 ;	assignBit
      000026 C2 A2            [12]  435 	clr	_P2_2
                                    436 ;	nixie_tube.c:10: bit1 = 0;
                                    437 ;	assignBit
      000028 C2 A3            [12]  438 	clr	_P2_3
                                    439 ;	nixie_tube.c:11: bit2 = 0;
                                    440 ;	assignBit
      00002A C2 A4            [12]  441 	clr	_P2_4
                                    442 ;	nixie_tube.c:12: break;
                                    443 ;	nixie_tube.c:13: case 1:
      00002C 22               [24]  444 	ret
      00002D                        445 00102$:
                                    446 ;	nixie_tube.c:14: bit0 = 1; 
                                    447 ;	assignBit
      00002D D2 A2            [12]  448 	setb	_P2_2
                                    449 ;	nixie_tube.c:15: bit1 = 0; 
                                    450 ;	assignBit
      00002F C2 A3            [12]  451 	clr	_P2_3
                                    452 ;	nixie_tube.c:16: bit2 = 0;
                                    453 ;	assignBit
      000031 C2 A4            [12]  454 	clr	_P2_4
                                    455 ;	nixie_tube.c:17: break;
                                    456 ;	nixie_tube.c:18: case 2:
      000033 22               [24]  457 	ret
      000034                        458 00103$:
                                    459 ;	nixie_tube.c:19: bit0 = 0;
                                    460 ;	assignBit
      000034 C2 A2            [12]  461 	clr	_P2_2
                                    462 ;	nixie_tube.c:20: bit1 = 1; 
                                    463 ;	assignBit
      000036 D2 A3            [12]  464 	setb	_P2_3
                                    465 ;	nixie_tube.c:21: bit2 = 0;
                                    466 ;	assignBit
      000038 C2 A4            [12]  467 	clr	_P2_4
                                    468 ;	nixie_tube.c:22: break;
                                    469 ;	nixie_tube.c:23: case 3:
      00003A 22               [24]  470 	ret
      00003B                        471 00104$:
                                    472 ;	nixie_tube.c:24: bit0 = 1; 
                                    473 ;	assignBit
      00003B D2 A2            [12]  474 	setb	_P2_2
                                    475 ;	nixie_tube.c:25: bit1 = 1; 
                                    476 ;	assignBit
      00003D D2 A3            [12]  477 	setb	_P2_3
                                    478 ;	nixie_tube.c:26: bit2 = 0; 
                                    479 ;	assignBit
      00003F C2 A4            [12]  480 	clr	_P2_4
                                    481 ;	nixie_tube.c:27: break;
                                    482 ;	nixie_tube.c:28: case 4:
      000041 22               [24]  483 	ret
      000042                        484 00105$:
                                    485 ;	nixie_tube.c:29: bit0 = 0;
                                    486 ;	assignBit
      000042 C2 A2            [12]  487 	clr	_P2_2
                                    488 ;	nixie_tube.c:30: bit1 = 0;
                                    489 ;	assignBit
      000044 C2 A3            [12]  490 	clr	_P2_3
                                    491 ;	nixie_tube.c:31: bit2 = 1;
                                    492 ;	assignBit
      000046 D2 A4            [12]  493 	setb	_P2_4
                                    494 ;	nixie_tube.c:32: break;
                                    495 ;	nixie_tube.c:33: case 5:
      000048 22               [24]  496 	ret
      000049                        497 00106$:
                                    498 ;	nixie_tube.c:34: bit0 = 1;
                                    499 ;	assignBit
      000049 D2 A2            [12]  500 	setb	_P2_2
                                    501 ;	nixie_tube.c:35: bit1 = 0; 
                                    502 ;	assignBit
      00004B C2 A3            [12]  503 	clr	_P2_3
                                    504 ;	nixie_tube.c:36: bit2 = 1;
                                    505 ;	assignBit
      00004D D2 A4            [12]  506 	setb	_P2_4
                                    507 ;	nixie_tube.c:37: break;
                                    508 ;	nixie_tube.c:38: case 6:
      00004F 22               [24]  509 	ret
      000050                        510 00107$:
                                    511 ;	nixie_tube.c:39: bit0 = 0; 
                                    512 ;	assignBit
      000050 C2 A2            [12]  513 	clr	_P2_2
                                    514 ;	nixie_tube.c:40: bit1 = 1;
                                    515 ;	assignBit
      000052 D2 A3            [12]  516 	setb	_P2_3
                                    517 ;	nixie_tube.c:41: bit2 = 1;
                                    518 ;	assignBit
      000054 D2 A4            [12]  519 	setb	_P2_4
                                    520 ;	nixie_tube.c:42: break;
                                    521 ;	nixie_tube.c:43: case 7:
      000056 22               [24]  522 	ret
      000057                        523 00108$:
                                    524 ;	nixie_tube.c:44: bit0 = 1;
                                    525 ;	assignBit
      000057 D2 A2            [12]  526 	setb	_P2_2
                                    527 ;	nixie_tube.c:45: bit1 = 1;
                                    528 ;	assignBit
      000059 D2 A3            [12]  529 	setb	_P2_3
                                    530 ;	nixie_tube.c:46: bit2 = 1;
                                    531 ;	assignBit
      00005B D2 A4            [12]  532 	setb	_P2_4
                                    533 ;	nixie_tube.c:48: }
                                    534 ;	nixie_tube.c:49: }
      00005D 22               [24]  535 	ret
                                    536 ;------------------------------------------------------------
                                    537 ;Allocation info for local variables in function 'select_char'
                                    538 ;------------------------------------------------------------
                                    539 ;number                    Allocated to registers r7 
                                    540 ;------------------------------------------------------------
                                    541 ;	nixie_tube.c:63: void select_char(char number) {
                                    542 ;	-----------------------------------------
                                    543 ;	 function select_char
                                    544 ;	-----------------------------------------
      00005E                        545 _select_char:
                                    546 ;	nixie_tube.c:64: P0 = alphabet[number];
      00005E E5 82            [12]  547 	mov	a,dpl
      000060 24r00            [12]  548 	add	a,#_alphabet
      000062 F9               [12]  549 	mov	r1,a
      000063 87 80            [24]  550 	mov	_P0,@r1
                                    551 ;	nixie_tube.c:65: }
      000065 22               [24]  552 	ret
                                    553 ;------------------------------------------------------------
                                    554 ;Allocation info for local variables in function 'delay'
                                    555 ;------------------------------------------------------------
                                    556 ;n                         Allocated to registers 
                                    557 ;------------------------------------------------------------
                                    558 ;	nixie_tube.c:67: void delay(int n) {
                                    559 ;	-----------------------------------------
                                    560 ;	 function delay
                                    561 ;	-----------------------------------------
      000066                        562 _delay:
      000066 AE 82            [24]  563 	mov	r6,dpl
      000068 AF 83            [24]  564 	mov	r7,dph
                                    565 ;	nixie_tube.c:68: while(n--);
      00006A                        566 00101$:
      00006A 8E 04            [24]  567 	mov	ar4,r6
      00006C 8F 05            [24]  568 	mov	ar5,r7
      00006E 1E               [12]  569 	dec	r6
      00006F BE FF 01         [24]  570 	cjne	r6,#0xff,00111$
      000072 1F               [12]  571 	dec	r7
      000073                        572 00111$:
      000073 EC               [12]  573 	mov	a,r4
      000074 4D               [12]  574 	orl	a,r5
      000075 70 F3            [24]  575 	jnz	00101$
                                    576 ;	nixie_tube.c:69: }
      000077 22               [24]  577 	ret
                                    578 ;------------------------------------------------------------
                                    579 ;Allocation info for local variables in function 'main'
                                    580 ;------------------------------------------------------------
                                    581 ;tube_block                Allocated to registers 
                                    582 ;num                       Allocated to registers r5 
                                    583 ;------------------------------------------------------------
                                    584 ;	nixie_tube.c:71: void main(void) {
                                    585 ;	-----------------------------------------
                                    586 ;	 function main
                                    587 ;	-----------------------------------------
      000078                        588 _main:
                                    589 ;	nixie_tube.c:73: while(1) {
      000078 7F 00            [12]  590 	mov	r7,#0x00
      00007A                        591 00102$:
                                    592 ;	nixie_tube.c:74: char num = tube_block%8;	
      00007A 8F 05            [24]  593 	mov	ar5,r7
      00007C 53 05 07         [24]  594 	anl	ar5,#0x07
                                    595 ;	nixie_tube.c:75: select_char(num);
      00007F 8D 82            [24]  596 	mov	dpl,r5
      000081 C0 07            [24]  597 	push	ar7
      000083 C0 05            [24]  598 	push	ar5
      000085 12r00r5E         [24]  599 	lcall	_select_char
      000088 D0 05            [24]  600 	pop	ar5
                                    601 ;	nixie_tube.c:76: select_nixie_tube(num);
      00008A 8D 82            [24]  602 	mov	dpl,r5
      00008C 12r00r00         [24]  603 	lcall	_select_nixie_tube
      00008F D0 07            [24]  604 	pop	ar7
                                    605 ;	nixie_tube.c:77: ++tube_block;
      000091 0F               [12]  606 	inc	r7
                                    607 ;	nixie_tube.c:78: delay(100000);
      000092 90 86 A0         [24]  608 	mov	dptr,#0x86a0
      000095 C0 07            [24]  609 	push	ar7
      000097 12r00r66         [24]  610 	lcall	_delay
      00009A D0 07            [24]  611 	pop	ar7
                                    612 ;	nixie_tube.c:80: }
      00009C 80 DC            [24]  613 	sjmp	00102$
                                    614 	.area CSEG    (CODE)
                                    615 	.area CONST   (CODE)
                                    616 	.area XINIT   (CODE)
                                    617 	.area CABS    (ABS,CODE)
